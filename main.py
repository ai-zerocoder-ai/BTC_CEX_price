import telebot
import datetime
import time
import threading
import random
import requests
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å –≤–∞—à–∏–º —Ç–æ–∫–µ–Ω–æ–º
bot = telebot.TeleBot('TELEGRAM_BOT_TOKEN')
@bot.message_handler(commands=['start'])
def start_message(message):
    bot.reply_to(message, '–ü—Ä–∏–≤–µ—Ç! –Ø —á–∞—Ç-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å —Ç–µ–±–µ –∫—É—Ä—Å BTC –Ω–∞ CEX Bybit')
    reminder_thread = threading.Thread(target=send_reminders, args=(message.chat.id,), daemon=True)
    reminder_thread.start()

@bot.message_handler(commands=['fact'])
def fact_message(message):
    facts = [
        "–ë–∏—Ç–∫–æ–∏–Ω –±—ã–ª –∑–∞–ø—É—â–µ–Ω –≤ 2009 –≥–æ–¥—É –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –∏–ª–∏ –≥—Ä—É–ø–ø–æ–π –ø–æ–¥ –ø—Å–µ–≤–¥–æ–Ω–∏–º–æ–º –°–∞—Ç–æ—à–∏ –ù–∞–∫–∞–º–æ—Ç–æ.",
        "–ë–∏—Ç–∫–æ–∏–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –±–ª–æ–∫—á–µ–π–Ω, –∫–æ—Ç–æ—Ä–∞—è –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ–∑ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –æ—Ä–≥–∞–Ω–∞.",
        "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏—Ç–∫–æ–∏–Ω–æ–≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ 21 –º–∏–ª–ª–∏–æ–Ω–æ–º –º–æ–Ω–µ—Ç, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –µ–≥–æ –¥–µ—Ñ–∏—Ü–∏—Ç–Ω—ã–º –∞–∫—Ç–∏–≤–æ–º."
    ]
    random_fact = random.choice(facts)
    bot.reply_to(message, f'–õ–æ–≤–∏ —Ñ–∞–∫—Ç –æ BTC: {random_fact}')

def get_crypto_prices():
    url = 'https://api.bybit.com/v5/market/tickers'
    params = {'category': 'spot'}
    try:
        response = requests.get(url, params=params, timeout=10)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
        data = response.json()

        tickers = data.get('result', {}).get('list', [])
        prices = {}
        for ticker in tickers:
            symbol = ticker.get('symbol')
            if symbol == 'BTCUSDT':
                last_price = ticker.get('lastPrice')
                prices[symbol] = last_price

        return prices
    except requests.RequestException as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ü–µ–Ω: {e}')
        return None

def send_reminders(chat_id):
    reminder_times = ["09:00", "14:00", "00:16"]
    while True:
        now = datetime.datetime.now().strftime("%H:%M")
        if now in reminder_times:
            prices = get_crypto_prices()
            if prices and 'BTCUSDT' in prices:
                price = prices['BTCUSDT']
                message = f"üìà –¢–µ–∫—É—â–∏–π –∫—É—Ä—Å BTC: {price} USDT"
            else:
                message = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å BTC. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

            bot.send_message(chat_id, message)
            # –ñ–¥–µ–º 61 —Å–µ–∫—É–Ω–¥—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —Ç—É –∂–µ –º–∏–Ω—É—Ç—É
            time.sleep(61)
        else:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
            time.sleep(1)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    bot.polling(none_stop=True)
